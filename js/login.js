

async function LoginInit() {
    await includeHTML();
    await chooseDisplayAnimation();
    await loadUserData();
    await loadContacts();
    //resetSelectedTab();////wo ist diese Funktion//? unter template.ja (sorgt dafür, dass richtiger oder kein Tab in Sidebar bzw. Footer ausgewählt ist)
}

async function chooseDisplayAnimation() {
    if (window.innerWidth >= 675) {
        await animationLogo();
        await animationDisplay();
    } else {
    }

}

async function animationLogo() {
    let joinLogodark = document.getElementById('logo-login');
    joinLogodark.classList.add('animate-logo');
}


async function animationDisplay() {
    let displayHelper = document.getElementById('start-animations-helper');
    displayHelper.classList.add('animate-helper');

}



/**
 * This function is part of the forwarding from signUp to login.
 * If the forwarding was successful, a message appears which is generated by a query parameter.
 * 
 */
function callStatusofSignUp() {
    const signUpStatus = localStorage.getItem('signUpStatus');
    const urlParams = new URLSearchParams(window.location.search);
    const msg = urlParams.get('msg');
    const msgBox = document.getElementById('msgBox');

   // slideInAnimation('wrapper-contact-details', 'translate-x', true);//

    if (signUpStatus === 'completed' && msg) {
        const msgSpan = document.createElement('span');
        msgSpan.innerHTML = msg;
        msgSpan.classList.add('successfullyBtn');
       // msgBox.appendChild(msgSpan);//
        slideInAnimation('msgBox','translate-x', true)
        localStorage.removeItem('signUpStatus');

    } else {
        msgBox.style.display = 'none';
    }
}


/**
 * This function checks whether there is stored data in the Local Storage and fills it into the input fields if it exists.
 */
function checkIfRememberedData() {
    if (localStorage.getItem('email')) {
        let rememberedEmail = localStorage.getItem('email');
        let rememberedPassword = localStorage.getItem('password');

        let emailInput = document.getElementById('email');
        let passwordInput = document.getElementById('password');

        emailInput.value = rememberedEmail;
        passwordInput.value = rememberedPassword;

        disableLogInButton();
    }
}

/**
 * This function checks whether the input matches an existing user and then logs this user in with the saved e-mail address.
 */
async function login() {
    let emailInput = document.getElementById('email');
    let convertedEmail = emailInput.value.toLowerCase();

    let passwordInput = document.getElementById('password');
    let currentUser = users.find(u => u.email.toLowerCase() == convertedEmail && u.password == passwordInput.value);
    if (currentUser) {
        loggedInEmail = currentUser.email;
        await setItem('loggedInEmail', loggedInEmail);
        window.location.href = './summary.html';
        checkStatusofCheckBox();
        clearLogIn();
    } else {
        displayErrorMessage('wrong e-mail or password', emailInput);
        displayErrorMessage('wrong e-mail or password', passwordInput);
    }
}


/**
 * This function checks whether all input fields have been filled and then releases the login button.
 */
function disableLogInButton() {
    let emailInput = document.getElementById('email');
    let passwordInput = document.getElementById('password');
    const LogInButton = document.getElementById('LogInButton');

    const allFieldsFilled = emailInput.value && passwordInput.value;

    if (allFieldsFilled) {
        LogInButton.removeAttribute('disabled');
        LogInButton.classList.remove('if-button-disabled');
        LogInButton.classList.add('btn-db');

    } else {
        LogInButton.setAttribute('disabled', true);
        LogInButton.classList.add('if-button-disabled');
    }
}

/**
 * This function checks whether the 'remember me' checkbox has been activated. If this is the case, the email and password are saved in the localStorage for the next login.
 */
function checkStatusofCheckBox() {
    let checkbox = document.getElementById('checkbox');
    if (checkbox.checked) {
        let emailInput = document.getElementById('email');
        let passwordInput = document.getElementById('password');
        localStorage.setItem('email', emailInput.value);
        localStorage.setItem('password', passwordInput.value);
    }
}

/**
 * The useGuestLogIn function sets the values of the email and password fields to predefined guest login information and saves the email address as loggedInEmail for later processing. The user is redirected to the summary page.
 */
async function useGuestLogIn() {
    document.getElementById('email').value = 'guest@account';
    document.getElementById('password').value = 'joinGuest2024';

    const guestUser = users.find(user => user.email === 'guest@account');
    if (guestUser) {
        await setItem('loggedInEmail', loggedInEmail);
        clearLogIn();
        window.location.href = './summary.html';
    }
}


/**
 * This function clears the input fields of the login form.
 */
function clearLogIn() {
    document.getElementById('email').value = '';
    document.getElementById('password').value = '';
}



